const scriptName="auto_diverter",CONFIG={DEBUG:1,SHELLY_SWITCH_ID:0,GRID_SOURCE:{TYPE:"EM",NOMINAL_VOLTAGE:230,MQTT_TOPIC_GRID_POWER:"homeassistant/states/sensor/grid_power/state",MQTT_TOPIC_GRID_VOLTAGE:"homeassistant/states/sensor/grid_voltage/state"},SEMI_PERIOD:1e4,PID:{INTERVAL_S:1,P_MODE:"input",D_MODE:"input",SETPOINT:-100,OUT_MIN:-400,OUT_MAX:6e3,KP:.1,KI:.2,KD:.05},DIMMERS:{boiler:{IP:"192.168.123.173",RESISTANCE:85,POWER_RATIO:1,POWER_LIMIT:0,BYPASS_THROUGH_EM_RELAY:!1,USE_POWER_LUT:!0,DIMMER_TURN_OFF_DELAY:3e5,MIN:1,MAX:100}}},usercomponents={};let PID={input:0,output:0,error:0,pTerm:0,iTerm:0,dTerm:0},DIVERT={gridVoltage:CONFIG.GRID_SOURCE.NOMINAL_VOLTAGE,dimmers:{}};function validateConfig(t){if(print(scriptName,":","Validating Config..."),0!==Object.keys(CONFIG.DIMMERS).length){for(let t in CONFIG.DIMMERS){if(CONFIG.DIMMERS[t].RESISTANCE<0)return void print(scriptName,":","ERR: Dimmer",t," resistance should be greater than 0");if(0!==CONFIG.DIMMERS[t].RESISTANCE){if(CONFIG.DIMMERS[t].MIN<1)return void print(scriptName,":","ERR: MIN must be greater than or equal to 1");if(CONFIG.DIMMERS[t].MAX>99)return void print(scriptName,":","ERR: MAX must be less than or equal to 99");if(CONFIG.DIMMERS[t].MIN>=CONFIG.DIMMERS[t].MAX)return void print(scriptName,":","ERR: MIN must be less than MAX");print(scriptName,":","Dimmer",t,"is enabled"),DIVERT.dimmers[t]={powerToDivert:0,fullPower:!1,standby:!1}}else print(scriptName,":","Dimmer",t,"is disabled")}"EM"===CONFIG.GRID_SOURCE.TYPE||"3EM"===CONFIG.GRID_SOURCE.TYPE||"MQTT"===CONFIG.GRID_SOURCE.TYPE?t():print(scriptName,":",'ERR: GRID TYPE must be "EM", "3EM" or "MQTT"')}else print(scriptName,":","ERR: No dimmer configured")}function constrain(t,e,r){return Math.min(Math.max(t,e),r)}const DIMMER_RESOLUTION=12,DIMMER_MAX=4095,TABLE_PHASE_LEN=80,TABLE_PHASE_SCALE=1264,TABLE_PHASE_DELAY=[61418,57300,55093,53517,52242,51148,50179,49300,48490,47736,47026,46354,45713,45099,44508,43938,43386,42850,42327,41818,41319,40831,40352,39881,39418,38961,38510,38065,37625,37189,36757,36328,35902,35479,35058,34640,34222,33806,33390,32975,32561,32146,31730,31314,30896,30478,30057,29634,29208,28779,28347,27911,27471,27026,26575,26118,25655,25184,24705,24217,23718,23209,22686,22150,21598,21028,20437,19823,19182,18510,17800,17046,16236,15357,14388,13294,12019,10443,8236,4118];function lookupFiringDelay(t){if(0==t)return CONFIG.SEMI_PERIOD;if(1==t)return 0;const e=t*DIMMER_MAX*TABLE_PHASE_SCALE+(TABLE_PHASE_SCALE>>2),r=e>>16,i=TABLE_PHASE_DELAY[r];return(i-((i-TABLE_PHASE_DELAY[r+1])*(65535&e)>>16))*CONFIG.SEMI_PERIOD>>16}function calculatePID(t){const e=t-PID.input,r=CONFIG.PID.SETPOINT-t,i=r-PID.error;return"error"==CONFIG.PID.P_MODE?PID.pTerm=CONFIG.PID.KP*r:"input"==CONFIG.PID.P_MODE&&(PID.pTerm-=CONFIG.PID.KP*e),PID.iTerm+=CONFIG.PID.KI*r,PID.iTerm=constrain(PID.iTerm,CONFIG.PID.OUT_MIN,CONFIG.PID.OUT_MAX),"error"==CONFIG.PID.D_MODE?PID.dTerm=CONFIG.PID.KD*i:"input"==CONFIG.PID.D_MODE&&(PID.dTerm=-CONFIG.PID.KD*e),PID.output=constrain(PID.pTerm+PID.iTerm+PID.dTerm,CONFIG.PID.OUT_MIN,CONFIG.PID.OUT_MAX),CONFIG.DEBUG>0&&print(scriptName,":","[PID] Input:",t,"W, Error:",r,"W, pTerm:",PID.pTerm,"W, iTerm:",PID.iTerm,"W, dTerm:",PID.dTerm,"W, Output:",PID.output,"W"),PID.input=t,PID.error=r,PID.output}function callDimmerCallback(t,e,r,i){if(e)print(scriptName,":","ERR callDimmerCallback:",e),i.dimmer.rpc="failed";else if(200!==t.code){const e=JSON.parse(t.body);print(scriptName,":","ERR",e.code,":",e.message),i.dimmer.rpc="failed"}else i.dimmer.rpc="success";i.cb()}function callDimmer(t,e,r){let i=0,I="";if(e.lastActivation||(e.lastActivation=0),e.standby)e.fullPower=!1,i=0,I="&on=false",CONFIG.DEBUG>0&&print(scriptName,":","["+t+"] STANDBY => relay: OFF, dimmer: 0%");else if(e.fullPower)i=100,I="&on=true",CONFIG.DEBUG>0&&print(scriptName,":","["+t+"] FULL POWER => relay: ON, dimmer: 100%");else{let r=CONFIG.DIMMERS[t].USE_POWER_LUT?(CONFIG.SEMI_PERIOD-e.firingDelay)/CONFIG.SEMI_PERIOD:e.dutyCycle;i=Math.round(constrain(100*r,CONFIG.DIMMERS[t].MIN,CONFIG.DIMMERS[t].MAX)),i>CONFIG.DIMMERS[t].MIN?(I="&on=true",e.lastActivation=Date.now(),CONFIG.DEBUG>1&&print(scriptName,":","["+t+"] ROUTING => relay: ON, dimmer:",i+"%")):Date.now()-e.lastActivation>=CONFIG.DIMMERS[t].DIMMER_TURN_OFF_DELAY?(I="&on=false",CONFIG.DEBUG&&print(scriptName,":","["+t+"] ROUTING => relay: OFF, dimmer:",i+"%")):(I="&on=true",CONFIG.DEBUG>1&&print(scriptName,":","["+t+"] ROUTING => relay: ON, dimmer:",i+"% (waiting to turn relay off)"))}const n="http://"+CONFIG.DIMMERS[t].IP+"/rpc/Light.Set?id=0"+I+"&brightness="+i+"&transition_duration=0.5";CONFIG.DEBUG>1&&print(scriptName,":","["+t+"] => Calling: ",n),Shelly.call("HTTP.GET",{url:n,timeout:5},callDimmerCallback,{dimmer:e,cb:r})}function callDimmers(){for(let t in DIVERT.dimmers){let e=DIVERT.dimmers[t];if("pending"===e.rpc){if(!isNaN(e.dutyCycle))return void callDimmer(t,e,callDimmers);e.rpc="failed",print(scriptName,":","ERR: Invalid duty cycle for dimmer",t)}}}function onSwitchGetStatus(t,e,r,i){if(404===e&&(e=0,t={output:!1}),e)print(scriptName,":","ERR onSwitchGetStatus:",e);else{CONFIG.DEBUG>1&&print(scriptName,":","[onSwitchGetStatus] ",JSON.stringify(t));for(let e in DIVERT.dimmers){let r=DIVERT.dimmers[e];CONFIG.DIMMERS[e].BYPASS_THROUGH_EM_RELAY?t.output?(print(scriptName,":","["+e+"] Bypass ON => turning off"),r.apparentPower=0,r.current=0,r.dimmedVoltage=0,r.powerToDivert=0,r.dutyCycle=0,r.firingDelay=0,r.powerFactor=0,r.thdi=0,r.standby=!0,r.fullPower=!1):r.fullPower=!1:t.output?(print(scriptName,":","["+e+"] Bypass ON through dimmer => 100% (full power)"),r.apparentPower=0,r.current=0,r.dimmedVoltage=0,r.powerToDivert=0,r.dutyCycle=0,r.firingDelay=0,r.powerFactor=0,r.thdi=0,r.standby=!1,r.fullPower=!0):r.fullPower=!1}callDimmers()}}function divert(t,e){getDynUserSettings();let r=calculatePID(e);for(let e in DIVERT.dimmers){let i=DIVERT.dimmers[e];i.maxPower=t*t/CONFIG.DIMMERS[e].RESISTANCE,i.fullPower?i.powerToDivert=i.maxPower:i.standby?i.powerToDivert=0:(i.powerToDivert=constrain(r,0,i.maxPower),i.powerToDivert=Math.round(i.powerToDivert*CONFIG.DIMMERS[e].POWER_RATIO),CONFIG.DIMMERS[e].POWER_LIMIT>0&&(i.powerToDivert=constrain(i.powerToDivert,0,CONFIG.DIMMERS[e].POWER_LIMIT)),r-=i.powerToDivert),i.dutyCycle=0==i.maxPower?0:constrain(i.powerToDivert/i.maxPower,0,1),i.firingDelay=lookupFiringDelay(i.dutyCycle),i.powerFactor=Math.sqrt(i.dutyCycle),i.dimmedVoltage=i.powerFactor*t,i.current=i.dimmedVoltage/CONFIG.DIMMERS[e].RESISTANCE,i.apparentPower=i.current*t,i.thdi=0===i.dutyCycle?0:Math.sqrt(1/i.dutyCycle-1),i.rpc="pending",CONFIG.DEBUG>0&&print(scriptName,":","[divert] ["+e+"] => ",Math.round(i.powerToDivert),"W,",Math.round(100*i.dutyCycle),"%")}CONFIG.SHELLY_SWITCH_ID>=0?Shelly.call("Switch.GetStatus",{id:CONFIG.SHELLY_SWITCH_ID},onSwitchGetStatus):callDimmers()}function onHttpGetStatus(t,e){t.query&&t.query.split("&").forEach((function(t){const e=t.split("=");"debug"==e[0]?(print(scriptName,":","[HTTP] Setting debug level to",e[1]),CONFIG.DEBUG=parseInt(e[1])):e[0]in DIVERT.dimmers&&("standby"==e[1]?(print(scriptName,":","[HTTP] Setting dimmer",e[0],"to STANDBY mode"),DIVERT.dimmers[e[0]].standby=!0,DIVERT.dimmers[e[0]].fullPower=!1):"auto"==e[1]&&(print(scriptName,":","[HTTP] Setting dimmer",e[0],"to AUTO mode"),DIVERT.dimmers[e[0]].standby=!1,DIVERT.dimmers[e[0]].fullPower=!1))})),e.code=200,e.headers={"Content-Type":"application/json"},e.body=JSON.stringify({config:CONFIG,pid:PID,divert:DIVERT}),e.send()}function getByPath(t,e){var r,i=e.split("."),I=t;for(r=0;r<i.length;r++){if(null==I)return;I=I[i[r]]}return I}function setByPath(t,e,r){var i,I=e.split("."),n=t;for(i=0;i<I.length-1;i++)n[I[i]]||(n[I[i]]={}),n=n[I[i]];n[I[I.length-1]]=r}function getDynUserSettings(){for(let t in usercomponents){let e=usercomponents[t],r=Virtual.getHandle(e);if(null!==r)try{let e=r.getValue();setByPath(CONFIG,t,e)}catch(t){print(scriptName,":","ERR: getValue() failed for",e,"-",t)}else print(scriptName,":","WARN: Dynamic component not found with virtual ID: ",e)}}validateConfig((function(){if(print(scriptName,":","Starting Shelly Solar Diverter..."),HTTPServer.registerEndpoint("status",onHttpGetStatus),"EM"===CONFIG.GRID_SOURCE.TYPE)print(scriptName,":","Grid Source: Shelly EM"),Timer.set(1e3*CONFIG.PID.INTERVAL_S,!0,(function(){const t="3EM"===CONFIG.GRID_SOURCE.TYPE?"EM.GetStatus":"EM1.GetStatus";Shelly.call(t,{id:0},(function(e,r,i){r?print(scriptName,":","ERR",t,":",r,i):(CONFIG.DEBUG>1&&print(scriptName,":",t,JSON.stringify(e)),"EM"===CONFIG.GRID_SOURCE.TYPE?(DIVERT.gridVoltage=e.voltage,DIVERT.gridPower=e.act_power):"3EM"===CONFIG.GRID_SOURCE.TYPE&&(DIVERT.gridVoltage=e.a_voltage,DIVERT.gridPower=e.total_act_power))}))}));else{if("MQTT"!==CONFIG.GRID_SOURCE.TYPE)return void print(scriptName,":","ERR: Invalid Grid Source: ",CONFIG.GRID_SOURCE.TYPE);print(scriptName,":","Grid Source: MQTT"),MQTT.subscribe(CONFIG.GRID_SOURCE.MQTT_TOPIC_GRID_VOLTAGE,(function(t,e){CONFIG.DEBUG>1&&print(scriptName,":","MQTT:",t,"=>",e),DIVERT.gridVoltage=parseFloat(e)})),MQTT.subscribe(CONFIG.GRID_SOURCE.MQTT_TOPIC_GRID_POWER,(function(t,e){CONFIG.DEBUG>1&&print(scriptName,":","MQTT:",t,"=>",e),DIVERT.gridPower=parseFloat(e)}))}Timer.set(1e3*CONFIG.PID.INTERVAL_S,!0,(function(){DIVERT.gridVoltage&&DIVERT.gridPower&&divert(DIVERT.gridVoltage,DIVERT.gridPower)}))}));